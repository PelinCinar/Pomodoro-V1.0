:root {
  font-size: 62.5%; /*1rem=16px*/

  --color-primary: hsla(282, 32%, 76%, 0.677);
  --color-secondary: hsla(227, 52%, 72%, 0.889);
  --color-font: hsla(0, 50%, 63%, 0.902);

  --color-shadow: hsl(236, 16%, 51%);
}

* {
  margin: 0; 
  padding: 0;
  box-sizing: border-box; /* belirtilen genişliği ve yüksekliği içerik, padding ve border'ı da kapsayacak şekilde hesaplanır.*/
}

html,
body {
  height: 100%; 
  background-color: var(--color-primary);
  font-size: 1.6rem; /*rem birimi kök elemanıdır genellikle html yazı tipi boyuna göre hesaplanır.*/
  font-family: "Open sans", sans-serif;
}

p,
i,
h1 {
  color: var(--color-font);
}

i {
  font-size: 3.9rem;
}

h1 {
  font-size: 6rem;
  background-color:rgba(220, 245, 222, 0.162);
  border-radius: 100rem;
}

/*CONTENT*/
section {
  display: flex;
  align-items: center;
  height: 100%;
}

.container {
  width: min(
    42.5rem,
    100%
  ); /*elemanın genişliğini belirler. Bu iki değerden 42.5remden büyük olamaz %100den fazla genişleyemez denir.*/
  margin-inline: auto; /*margin elemanın yatay eksende ortalanmasını sağlar nargininline özelliği tarayıcıda kalan boşluğu eşit şekilde ayarlar.  */
  padding-inline: 2rem;
  display: flex; /*elemanı flex konteyner yapar ve elamın içindeki çocuk elemanları yatay ve dikey olarak düzenlemeyi sağlar.*/
  justify-content: center; /*flex konteynerin içindeki çocuk elemanları yatay olarak ortalanmasını sağlar*/
  align-items: center; /*flex konteyner içindeki çocuk elemanların dikey olarak ortlanmasını sağlar.*/
  flex-direction: column; /*flex konteyner içindeki elemanların düzenleme yönünü dikey olarak ayarlar. Dikey olarak üst üste dizilirler.*/
}

.painel {
  display: grid; /*grid düzeni elemanları satırlar ve sütunlar şeklinde düzenlemek için kullanlır.*/
  grid-template-columns: 1fr 1fr; /*grid düzenindeki sütunları tanımlar. Burada ili eşit sütun tanımladır 1fr(1 fraction) yani her bir mavcut alanın yarısını kaplar. */
  text-align: center;
  width: 20rem;
  margin-block: 5rem;
  padding: 1rem;
  border-radius: 10rem;
  -webkit-box-shadow: 0px 0px 15px 10px var(--color-shadow);
  box-shadow: 0px 0px 15px 10px var(--color-shadow);
}

.painel p {
  opacity: 0.8;
  transform-origin: 1s ease-in;
}

.painel p.active {
  opacity: 1;
  color: var(--color-secondary);
}

.timer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 30rem;
  height: 30rem;
  border-radius: 30%;
  -webkit-box-shadow: 0px 0px 15px 10px var(--color-shadow);
  box-shadow: 0px 0px 15px 10px var(--color-shadow);
}

.circle {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 26rem;
  height: 26rem;
  border-radius: 30%;
  background-color: var(--color-secondary);
  position: relative;
}

.circle::before {
  /*sanal eleman ekleme yeri*/
  content: ""; /*içerik boş bir dize olarak tanımlanmış yani herhangi bir görünür metin ya da içerik eklenemez*/
  position: absolute; /*circle elemanın konumuna göre yerleştrilir. konumunu en yakın konumlandırılmış üst ögeye ekler.*/
  width: 90%;
  height: 95%;
  border-radius: 50%;
  background-color: var(--color-primary);
}

.time {
  position: relative; /*elemanın konumunun normal bellge akışına göre belirlenmesini sağlar*/
  display: flex; /*elemanı flex konteynırı yaptık ve yatay dikey olrarak çocukları düzenledik*/
  flex-direction: row; /*çocukları yatay olarak ayarladıkk.*/
}

.time p {
  font-size: 5.6rem;
}

.time p:nth-of-type(2) {
  position: relative;
  top: -0.5rem;
  margin-inline: 1rem;
}

.controls {
  margin-top: 3rem;
}

.controls button {
  border: none;
  background-color: transparent;
  cursor: pointer;
}

.controls #reset {
  display: none;
}

.controls stop {
  border: none;
  background-color: transparent;
  cursor: pointer;
}
